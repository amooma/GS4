<%

if user_signed_in?
	menu = [
		{ :text => "Admin"         , :url => url_for( :controller => '/admin' ) },
		{ :text => "Users"         , :url => url_for( :controller => '/admin/user' ) },
		{ :text => "Phones"        , :url => sip_phones_path },
		{ :text => "SIP Accounts"  , :url => sip_accounts_path },
		{ :text => "Extensions"    , :url => extensions_path },
		{ :text => "Servers"       , :sub => [
			{ :text => "Provisioning Servers" , :url => provisioning_servers_path },
			{ :text => "SIP Servers"          , :url => sip_servers_path },
			{ :text => "SIP Proxies"          , :url => sip_proxies_path },
		]},
	]
else
	menu = [
		{ :text => "Sign in"       , :url => new_user_session_path },
	]
end

def menu_html( menu, params_controller=nil, indent=0 )
	out = []
	out << ("\t"*indent) << "<ul>\n"
	menu.each { |item|
		out << ("\t"*indent) << "\t<li><a"
		if item[:url] != nil
			out << ' href="' << h( item[:url] ) << '"'
		end
		
		elcls = []
		elcls << 'navcur' if menu_item_current?( item, params_controller )
		out << ' class="' << elcls.join(' ') << '"' if elcls.length > 0
		
		out << '>' << h( item[:text] ) << '</a>'
		if item[:sub] != nil
			out << "\n" << menu_html( item[:sub], params_controller, indent+2 )
			out << ("\t"*indent) << "\t"
		end
		out << "</li>\n"
	}
	out << ("\t"*indent) << "</ul>\n"
	return out.join
end

def menu_item_current?( menu_item, params_controller )
	return false if params_controller == nil
	cur_url = params_controller.to_s.dup
	cur_url = '/' + cur_url if ! cur_url.start_with?('/')
	
	if menu_item[:url]
		if menu_item[:url].gsub(/\/$/,'') == cur_url
			return true
		end
	end
	if menu_item[:sub]
		menu_item[:sub].each { |item|
			return true if menu_item_current?( item, params_controller )
		}
	end
	return false
end

%>
<!-- nav menu { -->
<span class="tty">Navigation:</span>
<nav class="hnav">
<%- safe_concat( menu_html( menu, params[:controller], 1 ) ) %>
</nav>
<!-- nav menu } -->
